{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/common/login.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function () {\n  return {\n    \"color\": \"red\"\n  };\n};\nfunction LoginComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(2, _c0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction LoginComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 9);\n    i0.ɵɵtext(2, \" The email is required! \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nfunction LoginComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\", 9);\n    i0.ɵɵtext(2, \" The password is required! \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nexport class LoginComponent {\n  constructor(fb, router, loginService) {\n    this.fb = fb;\n    this.router = router;\n    this.loginService = loginService;\n    this.errorMessage = '';\n    this.loginForm = this.fb.group({\n      'email': ['', [Validators.required]],\n      'password': ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {}\n  login() {\n    this.loginService.login(this.loginForm.value).subscribe({\n      next: () => this.router.navigateByUrl('/'),\n      error: response => this.errorMessage = response.error\n    });\n  }\n  get username() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 5,\n  consts: [[1, \"row\", \"justify-content-md-center\", \"form\"], [1, \"col-8\", \"align-middle\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"ngStyle\", 4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [3, \"ngStyle\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Login as Administrator\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, LoginComponent_p_5_Template, 2, 3, \"p\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵtemplate(8, LoginComponent_ng_container_8_Template, 3, 2, \"ng-container\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"div\", 4);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵtemplate(12, LoginComponent_ng_container_12_Template, 3, 2, \"ng-container\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"hr\");\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵtext(15, \"Login\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].touched && (ctx.loginForm.controls[\"email\"].errors == null ? null : ctx.loginForm.controls[\"email\"].errors.required) && ctx.loginForm.controls[\"email\"].invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].touched && (ctx.loginForm.controls[\"password\"].errors == null ? null : ctx.loginForm.controls[\"password\"].errors.required) && ctx.loginForm.controls[\"password\"].invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i4.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"form[_ngcontent-%COMP%] {\\r\\n    border: 5px solid #6784a4;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.form[_ngcontent-%COMP%] {\\r\\n    padding: 50px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgYm9yZGVyOiA1cHggc29saWQgIzY3ODRhNDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5mb3JtIHtcclxuICAgIHBhZGRpbmc6IDUwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiDA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;ICG3EC,4BAAqD;IAAAA,YAAgB;IAAAA,iBAAI;;;;IAAtEA,oDAA4B;IAAsBA,eAAgB;IAAhBA,yCAAgB;;;;;IAGjEA,6BAE0D;IACxDA,4BAAgC;IAC9BA,wCACF;IAAAA,iBAAI;IACNA,0BAAe;;;IAHVA,eAA4B;IAA5BA,oDAA4B;;;;;IAQjCA,6BAE6D;IAC3DA,4BAAgC;IAC9BA,2CACF;IAAAA,iBAAI;IACNA,0BAAe;;;IAHVA,eAA4B;IAA5BA,oDAA4B;;;ADX7C,OAAM,MAAOC,cAAc;EAIzBC,YACUC,EAAe,EACfC,MAAc,EACdC,YAA0B;IAF1B,OAAE,GAAFF,EAAE;IACF,WAAM,GAANC,MAAM;IACN,iBAAY,GAAZC,YAAY;IALtB,iBAAY,GAAG,EAAE;IAMf,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7B,OAAO,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACpC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACS,QAAQ,CAAC;KACvC,CAAC;EACH;EAEDC,QAAQ,IACR;EAEAC,KAAK;IACH,IAAI,CAACL,YAAY,CAACK,KAAK,CAAC,IAAI,CAACJ,SAAS,CAACK,KAAK,CAAC,CAACC,SAAS,CAAC;MACtDC,IAAI,EAAE,MAAM,IAAI,CAACT,MAAM,CAACU,aAAa,CAAC,GAAG,CAAC;MAC1CC,KAAK,EAAGC,QAAQ,IAAK,IAAI,CAACC,YAAY,GAAGD,QAAQ,CAACD;KACnD,CAAC;EACF;EAGF,IAAIG,QAAQ;IACV,OAAO,IAAI,CAACZ,SAAS,CAACa,GAAG,CAAC,OAAO,CAAC;EACpC;EAEA,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACd,SAAS,CAACa,GAAG,CAAC,UAAU,CAAC;EACvC;;AA/BWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BzB,8BAAgD;MAEdA;QAAA,OAAY0B,WAAO;MAAA,EAAC;MAChD1B,0BAAI;MAAAA,sCAAsB;MAAAA,iBAAK;MAC7BA,2DAAyE;MACvEA,8BAAwB;MACtBA,2BAAgJ;MAChJA,iFAMe;MACjBA,iBAAM;MACNA,qBAAI;MACJA,+BAAwB;MACtBA,4BAAyH;MACzHA,mFAMe;MACjBA,iBAAM;MACNA,sBAAI;MACJA,kCAA6E;MAAAA,sBAAK;MAAAA,iBAAS;;;MAzB3FA,eAAuB;MAAvBA,yCAAuB;MAEQA,eAAkB;MAAlBA,uCAAkB;MAGhCA,eAEyC;MAFzCA,sNAEyC;MASzCA,eAE4C;MAF5CA,kOAE4C;MAOrDA,eAA8B;MAA9BA,gDAA8B","names":["Validators","i0","LoginComponent","constructor","fb","router","loginService","loginForm","group","required","ngOnInit","login","value","subscribe","next","navigateByUrl","error","response","errorMessage","username","get","password","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Georgi Petrov\\source\\PetrovBlog\\Blog\\Blog\\ClientApp\\src\\app\\login\\login.component.ts","C:\\Users\\Georgi Petrov\\source\\PetrovBlog\\Blog\\Blog\\ClientApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmailValidator, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LoginService } from 'src/app/common/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errorMessage = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private loginService: LoginService) {\n    this.loginForm = this.fb.group({\n      'email': ['', [Validators.required]],\n      'password': ['', [Validators.required]]\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  login() {    \n    this.loginService.login(this.loginForm.value).subscribe({\n      next: () => this.router.navigateByUrl('/'),\n      error: (response) => this.errorMessage = response.error,\n    });\n    }\n  \n\n  get username() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n}","<div class=\"row justify-content-md-center form\">\n  <div class=\"col-8 align-middle\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n      <h3>Login as Administrator</h3>\n        <p [ngStyle]=\"{'color': 'red'}\" *ngIf=\"errorMessage\">{{errorMessage}}</p>\n          <div class=\"form-group\">\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n            <ng-container *ngIf=\"loginForm.controls['email'].touched &&\n                                 loginForm.controls['email'].errors?.required &&\n                                 loginForm.controls['email'].invalid\">\n              <p [ngStyle]=\"{'color': 'red'}\">\n                The email is required!\n              </p>\n            </ng-container>\n          </div>\n          <br>\n          <div class=\"form-group\">\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n            <ng-container *ngIf=\"loginForm.controls['password'].touched &&\n                                 loginForm.controls['password'].errors?.required &&\n                                 loginForm.controls['password'].invalid\">\n              <p [ngStyle]=\"{'color': 'red'}\">\n                The password is required!\n              </p>\n            </ng-container>\n          </div>\n          <hr>\n          <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-success\">Login</button>\n        </form>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}