{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\n\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\n\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n\n\nclass Directionality {\n  constructor(_document) {\n    /** The current 'ltr' or 'rtl' value. */\n    this.value = 'ltr';\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n\n    this.change = new EventEmitter();\n\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      const value = bodyDir || htmlDir;\n      this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\nDirectionality.ɵfac = function Directionality_Factory(t) {\n  return new (t || Directionality)(i0.ɵɵinject(DIR_DOCUMENT, 8));\n};\n\nDirectionality.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Directionality,\n  factory: Directionality.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DIR_DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n\n\nclass Dir {\n  constructor() {\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    this._dir = 'ltr';\n    /** Whether the `value` has been set to its initial value. */\n\n    this._isInitialized = false;\n    /** Event emitted when the direction changes. */\n\n    this.change = new EventEmitter();\n  }\n  /** @docs-private */\n\n\n  get dir() {\n    return this._dir;\n  }\n\n  set dir(value) {\n    const old = this._dir;\n    const normalizedValue = value ? value.toLowerCase() : value;\n    this._rawDir = value;\n    this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';\n\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /** Current layout direction of the element. */\n\n\n  get value() {\n    return this.dir;\n  }\n  /** Initialize once default value has been set. */\n\n\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\nDir.ɵfac = function Dir_Factory(t) {\n  return new (t || Dir)();\n};\n\nDir.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Dir,\n  selectors: [[\"\", \"dir\", \"\"]],\n  hostVars: 1,\n  hostBindings: function Dir_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx._rawDir);\n    }\n  },\n  inputs: {\n    dir: \"dir\"\n  },\n  outputs: {\n    change: \"dirChange\"\n  },\n  exportAs: [\"dir\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Directionality,\n    useExisting: Dir\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Dir, [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir'\n    }]\n  }], null, {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass BidiModule {}\n\nBidiModule.ɵfac = function BidiModule_Factory(t) {\n  return new (t || BidiModule)();\n};\n\nBidiModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BidiModule\n});\nBidiModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BidiModule, [{\n    type: NgModule,\n    args: [{\n      exports: [Dir],\n      declarations: [Dir]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };","map":{"version":3,"names":["i0","InjectionToken","inject","EventEmitter","Injectable","Optional","Inject","Directive","Output","Input","NgModule","DOCUMENT","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","constructor","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","ɵfac","ɵprov","type","args","undefined","decorators","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","ngAfterContentInit","ɵdir","provide","useExisting","selector","providers","host","exportAs","BidiModule","ɵmod","ɵinj","exports","declarations"],"sources":["C:/Users/Georgi Petrov/source/PetrovBlog/Blog/Blog/ClientApp/node_modules/@angular/cdk/fesm2015/bidi.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DIR_DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0-rc.3\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}